<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcbGrade.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        smW1j9v/A9IunwnnkwLTAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="sqLiteCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="sqLiteCommand2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>165, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>313, 17</value>
  </metadata>
</root>